---
- name: Hetzner Server erstellen
  hosts: localhost
  gather_facts: false

  vars:
    hcloud_token: "{{ lookup('community.general.onepassword', 'Hetzner Cloud API' , field='token', vault='CI') }}"

  vars_prompt:

    - name: server_name
      prompt: Name des zu erstellenden Servers eingeben
      private: false

    - name: server_type
      prompt: Server Type des zu erstellenden Servers eingeben
      default: cax11
      private: false

    - name: server_image
      prompt: Server Image des zu erstellenden Servers eingeben
      default: debian-12
      private: false

    - name: server_location
      prompt: Server Location des zu erstellenden Servers eingeben
      default: fsn1
      private: false

    - name: ssh_keys
      prompt: SSH Key Name des zu erstellenden Servers eingeben
      default: MBA SSH
      private: false

    - name: docker
      prompt: Docker installiert? [True/False]
      private: false
      default: True


  tasks:

    - name: Lesen Tailscale Node Informationen zu Servernamen
      command: "tailscale ip -4 {{ server_name }} "
      register: tailscale_info
      failed_when: false

    - name: Speichern der Tailscale IP zur weiteren Verwendung
      set_fact: 
        tailscale_ip: "{{ tailscale_info.stdout }}"

    - name: Erstelle Hetzner-Server per API
      hetzner.hcloud.server:
        api_token: "{{ hcloud_token }}"
        name: "{{ server_name }}"
        server_type: "{{ server_type }}"
        image: "{{ server_image }}"
        location: "{{ server_location }}"
        ssh_keys: ["{{ ssh_keys }}"]
        state: present
      register: created_server
      when: tailscale_ip == ""

    - name: Neu erzeugten Server in dynamisches Hostfile aufnehmen
      add_host:
        name: "{{ created_server.hcloud_server.ipv4_address }}"
        groups: hetzner_single
        ansible_user: root
        server_name: "{{ server_name }}"
        docker: "{{ docker }}"
      when: tailscale_ip == ""

    - name: Tailscale IP in dynamisches Hostfile aufnehmen
      add_host:
        name: "{{ tailscale_ip }}"
        groups: hetzner_single
        ansible_user: root
        server_name: "{{ server_name }}"
        docker: "{{ docker }}"
      when: tailscale_ip != ""

    - name: Auf Start des neuen Servers warten
      wait_for:
        timeout: 120
        port: 22
        host: "{{ created_server.hcloud_server.ipv4_address }}"
      when: tailscale_ip == ""

- name: Server mit custom Skript aufsetzen
  hosts: hetzner_single
  gather_facts: true

  vars:
    tailscale_token: "{{ lookup('community.general.onepassword', 'Tailscale Token - Remote Server' , field='Anmeldedaten', vault='CI') }}"
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Check if tailscale is installed and running
      ansible.builtin.shell: pgrep tailscaled
      register: tailscale_running
      failed_when: false
      changed_when: false

    - name: Install and run Tailscale
      include_role:
        name: artis3n.tailscale.machine
      vars:
        tailscale_authkey: "{{ tailscale_token }}"
        tailscale_args: "--ssh --accept-dns=false --accept-routes=false --advertise-exit-node"
      when: tailscale_running.rc != 0

    - name: Run Server Setup
      include_role:
        name: server-setup
