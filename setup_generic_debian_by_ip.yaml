---
- name: Serverkonfiguration per IP
  hosts: localhost
  gather_facts: false

  vars_prompt:
    - name: server_name
      prompt: DNS Name oder IP des zu konfigurierenden Servers eingeben
      private: false

    - name: docker
      prompt: Docker installiert? [True/False]
      private: false
      default: True

    - name: backrest
      prompt: Backrest installiert? [True/False]
      private: false
      default: True

    - name: tailscale
      prompt: Tailscale installiert? [True/False]
      private: false
      default: True

  tasks:
    - name: Lesen Tailscale Node Informationen zu Servernamen
      command: "tailscale ip -4 {{ server_name }} "
      register: tailscale_info
      failed_when: false

    - name: Speichern der Tailscale IP zur weiteren Verwendung
      set_fact:
        tailscale_ip: "{{ tailscale_info.stdout }}"

    - name: IP des Servers in dynamisches Hostfile aufnehmen
      add_host:
        name: "{{ server_name }}"
        groups: hetzner_single
        ansible_user: root
        server_name: "{{ server_name }}"
        docker: "{{ docker }}"
        backrest: "{{ backrest }}"
        tailscale: "{{ tailscale }}"
      when: tailscale_ip == ""

    - name: Tailscale IP in dynamisches Hostfile aufnehmen
      add_host:
        name: "{{ tailscale_ip }}"
        groups: hetzner_single
        ansible_user: root
        server_name: "{{ server_name }}"
        docker: "{{ docker }}"
        backrest: "{{ backrest }}"
        tailscale: "{{ tailscale }}"
      when: tailscale_ip != ""

    - name: Auf Erreichbarkeit des Servers warten
      wait_for:
        timeout: 120
        port: 22
        host: "{{ server_name }}"
      when: tailscale_ip == ""

- name: Server mit custom Skript aufsetzen
  hosts: hetzner_single
  gather_facts: true

  vars:
    tailscale_token: "{{ lookup('community.general.onepassword', 'Tailscale Token - Remote Server' , field='Anmeldedaten', vault='CI') }}"
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Check if tailscale is installed and running
      ansible.builtin.shell: pgrep tailscaled
      register: tailscale_running
      failed_when: false
      changed_when: false

    - name: Install and run Tailscale
      include_role:
        name: artis3n.tailscale.machine
      vars:
        tailscale_authkey: "{{ tailscale_token }}"
        tailscale_args: "--ssh --accept-dns=false --accept-routes=false --advertise-exit-node"
      when: tailscale_running.rc != 0 and tailscale == True

    - name: Run Server Setup
      include_role:
        name: server-setup
